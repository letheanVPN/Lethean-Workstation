name: Desktop build
permissions:
  contents: write
# Build for everything on "main" & "v*.*.*"
on:
  repository_dispatch:
    types: [ build ]
  push:
    branches:
      - 'main'
      - 'dev'
      - 'v*'
    tags:
      - 'v*'
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - 'main'
      - 'dev'
      - 'v*'
    paths-ignore:
      - '**.md'

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: letheanVPN/wails-build-action@v1
        with:
          build-platform: linux/amd64
          deno-build: "npm run server:build:linux"
          deno-working-directory: "server"
          wails-build-webview2: "embed"
      - name: 'Tar files'
        run: cd build/bin/ && tar -cvf ../../linux-lethean-desktop.tar .
      # uploads the job file, makes no release
      - uses: actions/upload-artifact@v2
        with:
          name: Linux Desktop
          path: linux-lethean-desktop.tar
      # if this is a tag build, upload
      - name: Release Tag
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: linux-lethean-desktop.tar
      - name: Release Branch
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/heads/main')
        with:
          tag_name: canary
          prerelease: true
          files: linux-lethean-desktop.tar
  macos:
    runs-on: macos-latest
    steps:
      # Checkout code
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: letheanVPN/wails-build-action@main
        with:
          build-platform: darwin/universal
          deno-build: "npm run server:build:macos-intel"
          deno-working-directory: "server"
          wails-build-webview2: "embed"
          sign-macos-apple-password: ${{ secrets.APPLE_PASSWORD }}
          sign-macos-app-id: "Developer ID Application: Lethean LTD (W2DNA5L5DY)"
          sign-macos-app-cert: ${{ secrets.MAC_DEVELOPER_CERT }}
          sign-macos-app-cert-password: ${{ secrets.MACOS_DEVELOPER_PASSWORD }}
          sign-macos-installer-id: "Developer ID Installer: Lethean LTD (W2DNA5L5DY)"
          sign-macos-installer-cert: ${{ secrets.MAC_DEVELOPER_INSTALL_CERT }}
          sign-macos-installer-cert-password: ${{ secrets.MAC_DEVELOPER_INSTALL_PASS }}
      # uploads the job file, makes no release
      - uses: actions/upload-artifact@v2
        with:
          name: macOS Universal Desktop
          path: build/bin/
      # if this is a tag build, upload
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            build/bin/lethean.dmg
            build/bin/lethean.pkg
            build/bin/lethean.app.zip

  windows:
    runs-on: windows-2022
    steps:
      # Checkout code
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: letheanVPN/wails-build-action@v1
        with:
          build-platform: windows/amd64
          deno-build: "npm run server:build:windows"
          deno-working-directory: "server"
          wails-build-webview2: "embed"
      # uploads the job file, makes no release
      - uses: actions/upload-artifact@v2
        with:
          name: Windows Desktop
          if-no-files-found: error
          path: |
            build\bin\lethean.exe
            build\bin\lethean-amd64-installer.exe
      # if this is a tag build, upload
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            build\bin\lethean.exe
            build\bin\lethean-amd64-installer.exe
#
#  lauchers:
#    name: "Trigger: letheanVPN/launchers"
#    runs-on: ubuntu-latest
#    needs:
#      - linux
#      - windows
#      - macos
#    steps:
#      - name: Repository Dispatch
#        uses: peter-evans/repository-dispatch@v2
#        with:
#          token: ${{ secrets.REPO_ACCESS_TOKEN }}
#          event-type: build
#          repository: letheanVPN/launchers
#
