name: Windows
permissions:
  contents: write

# Build for everything on "main" & "v*.*.*"
on:
  push:
    branches:
      - 'main'
      - 'v*'
    tags:
      - 'v*'
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - 'main'
      - 'v*'
    paths-ignore:
      - '**.md'

jobs:
  windows:
    runs-on: windows-2022
    steps:
      # Checkout code
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      # Install / Setup Nodejs v16
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      # Install GoLang
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17
      # Setup node module caching
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: '%AppData%/npm-cache'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      # Set up GoLang cache
      - name: Go Cache
        uses: actions/cache@v2
        with:
          path: |
            %LocalAppData%\go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      # Helper NPM module install
      - run: npm install --legacy-peer-deps
      # Install desktop-angular-app dependencies
      - run: cd frontend && npm install --legacy-peer-deps && npm run build
      # runs deno installer
      - name: Install Deno
        run: iwr https://deno.land/x/install/install.ps1 -useb | iex
      # runs: wails build creating a packaged exe
      - name: Build
        run: wails build --platform windows
      - uses: papeloto/action-zip@v1
        with:
          files: build/bin
          dest: windows-lethean-desktop.zip
      # uploads the job file, makes no release
      - uses: actions/upload-artifact@v2
        with:
          name: Windows Desktop
          path: windows-lethean-desktop.zip
      # if this is a tag build, upload
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: windows-lethean-desktop.zip
      - name: Release Branch
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/heads/main')
        with:
          prerelease: true
          files: windows-lethean-desktop.zip
